% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_tcorpus.r
\name{create_tcorpus}
\alias{create_tcorpus}
\alias{create_tcorpus.character}
\alias{create_tcorpus.factor}
\alias{create_tcorpus.data.frame}
\title{Create a tCorpus}
\usage{
create_tcorpus(x, ...)

\method{create_tcorpus}{character}(x, doc_id = 1:length(x), meta = NULL,
  split_sentences = F, max_sentences = NULL, max_tokens = NULL,
  verbose = F, ...)

\method{create_tcorpus}{factor}(x, doc_id = 1:length(x), meta = NULL,
  split_sentences = F, max_sentences = NULL, max_tokens = NULL,
  verbose = F, ...)

\method{create_tcorpus}{data.frame}(x, text_columns = "text",
  doc_column = "doc_id", split_sentences = F, max_sentences = NULL,
  max_tokens = NULL, ...)
}
\arguments{
\item{x}{main input. can be a character (or factor) vector where each value is a full text, or a data.frame that has a column that contains full texts.}

\item{...}{not used}

\item{doc_id}{if x is a character/factor vector, doc_id can be used to specify document ids. This has to be a vector of the same length as x}

\item{meta}{A data.frame with document meta information (e.g., date, source). The rows of the data.frame need to match the values of x}

\item{split_sentences}{Logical. If TRUE, the sentence number of tokens is also computed.}

\item{max_sentences}{An integer. Limits the number of sentences per document to the specified number. If set when split_sentences == FALSE, split_sentences will be set to TRUE.}

\item{max_tokens}{An integer. Limits the number of tokens per document to the specified number}

\item{verbose}{If TRUE, report progress}

\item{text_columns}{if x is a data.frame, this specifies the column(s) that contains text. The texts are paste together in the order specified here.}

\item{doc_column}{If x is a data.frame, this specifies the column with the document ids.}
}
\description{
Create a \link{tCorpus} from raw text input
}
\examples{

tc = create_tcorpus(c('Text one first sentence. Text one second sentence', 'Text two'))
tc$get()

tc = create_tcorpus(c('Text one first sentence. Text one second sentence', 'Text two'),
                    split_sentences = TRUE)
tc$get()

## with meta (easier to S3 method for data.frame)
meta = data.frame(doc_id = c(1,2), source = c('a','b'))
tc = create_tcorpus(c('Text one first sentence. Text one second sentence', 'Text two'),
                    split_sentences = TRUE,
                    doc_id = c(1,2),
                    meta = meta)
tc
## It makes little sense to have full texts as factors, but it tends to happen.
## The create_tcorpus S3 method for factors is essentially identical to the
##  method for a character vector.
text = factor(c('Text one first sentence', 'Text one second sentence'))
tc = create_tcorpus(text)
tc$get()
d = data.frame(text = c('Text one first sentence. Text one second sentence.',
               'Text two', 'Text three'),
               date = c('2010-01-01','2010-01-01','2012-01-01'),
               source = c('A','B','B'))

tc = create_tcorpus(d, split_sentences = TRUE)
tc
tc$get()

## use multiple text columns
d$headline = c('Head one', 'Head two', 'Head three')
## use custom doc_id
d$doc_id = c('#1', '#2', '#3')

tc = create_tcorpus(d, text_columns = c('headline','text'), doc_column = 'doc_id',
                    split_sentences = TRUE)
tc
tc$get()

## (note that text from different columns is pasted together with a double newline in between)
tc$read_text(doc_id = '#1')
}
